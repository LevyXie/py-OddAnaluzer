# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'OddAnalyzer.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import re

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QStandardItemModel, QStandardItem
from PyQt5.QtWidgets import QApplication, QMainWindow, QHeaderView, QTableWidgetItem, QButtonGroup, QMessageBox
import sys
from qt_material import apply_stylesheet
from Spider import GambleSpider


class Ui_MainWindow(object):

    def __init__(self):
        self.choice = ''

    # 以下为QtDesigner生成的UI界面代码
    def setupUi(self, MainWindow):
        # 创建窗口
        MainWindow.resize(580, 540)
        MainWindow.setMinimumSize(QtCore.QSize(580, 540))
        MainWindow.setMaximumSize(QtCore.QSize(580, 540))

        self.centralwidget = QtWidgets.QWidget(MainWindow)

        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(20, 20, 541, 71))
        self.groupBox.setAlignment(QtCore.Qt.AlignCenter)

        self.widget = QtWidgets.QWidget(self.groupBox)
        self.widget.setGeometry(QtCore.QRect(10, 10, 521, 51))
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setStyleSheet("font: 75 9pt \"微软雅黑\";")
        self.horizontalLayout_2.addWidget(self.label_2)
        # url
        self.urlText = QtWidgets.QLineEdit(self.widget)

        self.horizontalLayout_2.addWidget(self.urlText)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setStyleSheet("font: 75 9pt \"微软雅黑\";")
        self.horizontalLayout.addWidget(self.label)

        # 选择器
        self.rb1 = QtWidgets.QRadioButton(self.widget)
        self.horizontalLayout.addWidget(self.rb1)
        self.rb2 = QtWidgets.QRadioButton(self.widget)
        self.horizontalLayout.addWidget(self.rb2)
        self.rb3 = QtWidgets.QRadioButton(self.widget)
        self.horizontalLayout.addWidget(self.rb3)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.chooser = QButtonGroup(self.widget)
        self.chooser.addButton(self.rb1, 1)
        self.chooser.addButton(self.rb2, 2)
        self.chooser.addButton(self.rb3, 3)
        self.chooser.buttonClicked.connect(self.choose_source)
        # 按钮：触发器，click触发
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(210, 100, 171, 23))
        self.pushButton.clicked.connect(self.server)

        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(20, 140, 541, 370))
        self.groupBox_2.setAlignment(QtCore.Qt.AlignCenter)
        self.widget1 = QtWidgets.QWidget(self.groupBox_2)
        self.widget1.setGeometry(QtCore.QRect(11, 11, 521, 341))
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget1)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.label_5 = QtWidgets.QLabel(self.widget1)
        self.horizontalLayout_3.addWidget(self.label_5)

        # 赛程
        self.game_text = QtWidgets.QLineEdit(self.widget1)
        self.horizontalLayout_3.addWidget(self.game_text)
        self.label_6 = QtWidgets.QLabel(self.widget1)
        self.horizontalLayout_3.addWidget(self.label_6)

        # 即时赔率数据
        self.odd_text = QtWidgets.QLineEdit(self.widget1)
        self.horizontalLayout_3.addWidget(self.odd_text)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.label_3 = QtWidgets.QLabel(self.widget1)
        self.horizontalLayout_4.addWidget(self.label_3)

        # 推荐策略
        self.advice_text = QtWidgets.QLineEdit(self.widget1)
        self.horizontalLayout_4.addWidget(self.advice_text)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.label_4 = QtWidgets.QLabel(self.widget1)
        self.horizontalLayout_5.addWidget(self.label_4)
        # 同赔赛果
        self.like_count_text = QtWidgets.QLineEdit(self.widget1)
        self.horizontalLayout_5.addWidget(self.like_count_text)
        self.verticalLayout.addLayout(self.horizontalLayout_5)
        # 同赔赛果列表
        self.tableView = QtWidgets.QTableView(self.widget1)
        self.tableView.setMinimumSize(QtCore.QSize(0, 200))
        self.verticalLayout.addWidget(self.tableView)
        self.verticalLayout.setStretch(2, 4)
        MainWindow.setCentralWidget(self.centralwidget)

        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "足彩即时欧赔分析器"))
        self.label_2.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600;\">欧赔网址：</span></p></body></html>"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600;\">赔率公司:</span></p></body></html>"))
        self.rb1.setText(_translate("MainWindow", "立博"))
        self.rb2.setText(_translate("MainWindow", "威廉希尔"))
        self.rb3.setText(_translate("MainWindow", "Bet365"))
        self.pushButton.setText(_translate("MainWindow", "一键生成比赛策略"))
        self.label_5.setText(_translate("MainWindow", "当前比赛场次"))
        self.label_6.setText(_translate("MainWindow", "即时欧赔数据"))
        self.label_3.setText(_translate("MainWindow", "本场推荐策略"))
        self.label_4.setText(_translate("MainWindow", "历史同赔赛果"))

    def set_table_model(self, data):
        # 设置数据层次结构
        self.model = QStandardItemModel(len(data), 6)
        # 设置水平方向标签文本内容
        self.model.setHorizontalHeaderLabels(['主队', '客队', '胜赔', '平赔', '负赔', '赛果'])
        # 实例化表格视图，设置模型为自定义的模型
        self.tableView.setModel(self.model)
        # 水平方向，表格大小拓展到适当的尺寸
        self.tableView.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        self.tableView.verticalHeader().setSectionResizeMode(QHeaderView.Stretch)
        row = 0
        for item in data:
            self.model.setItem(row, 0, QStandardItem(item['主队']))
            self.model.setItem(row, 1, QStandardItem(item['客队']))
            self.model.setItem(row, 2, QStandardItem(str(item['胜赔'])))
            self.model.setItem(row, 3, QStandardItem(str(item['平赔'])))
            self.model.setItem(row, 4, QStandardItem(str(item['负赔'])))
            self.model.setItem(row, 5, QStandardItem(item['赛果']))
            row += 1

    def server(self):
        spider = GambleSpider()
        url = self.urlText.text()
        title = self.choice
        if title == '':
            QMessageBox.information(self.widget1, '提示', '请选择博彩公司！')
            return
        if url == '':
            QMessageBox.information(self.widget1, '提示', '请输入url!')
            return

        if not re.match('(https?|ftp|file)://[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]', url):
            QMessageBox.information(self.widget1, '提示', '网址格式有误，请重新输入!')
            return
        # 开始爬取数据
        try:
            soup = spider.get_soup_from_url(url)
            team = spider.get_team_from_soup(soup)
            odds = spider.get_now_odds(soup, title)
            json_url = spider.get_next_url(soup, title)
            json = spider.get_json_from_url(json_url)
            result = spider.parse_json_to_result(json, odds)
            # 将原数据返还至文本框
            self.odd_text.setText(result.get('odds'))
            self.advice_text.setText(result.get('advice'))
            self.like_count_text.setText(result.get('likecount'))
            self.game_text.setText(team[0] + ' vs ' + team[2])
            # 填充表格
            self.set_table_model(result.get('like'))
        except Exception:
            QMessageBox.information(self.widget1, '提示', '程序错误，请检查网址是否输入正确！')
            return

    def choose_source(self):
        if self.chooser.checkedId() == 1:
            self.choice = '立博'
        if self.chooser.checkedId() == 2:
            self.choice = '威廉希尔'
        if self.chooser.checkedId() == 3:
            self.choice = 'Bet365'


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QMainWindow()
    gui = Ui_MainWindow()
    gui.setupUi(MainWindow)
    apply_stylesheet(app, theme='dark_red.xml') # 设置UI界面样式
    MainWindow.show()
    sys.exit(app.exec_())

